/* The Groovy plugin for Gradle assumes the following layout
 * src/main/java
 * src/main/resources
 * src/main/groovy
 *
 * src/test/java
 * src/test/resources
 * src/test/groovy
 *
 * src/<sourceSet>/java
 * src/<sourceSet>/resources
 * src/<sourceSet>/groovy
 *
 * You can override or create a new sourceSet with the following snippet:
 *
 * sourceSets {
 *     main {
 *         // We can override src/main/groovy to also add src/main/zip
 *         groovy {
 *             srcDirs = ['src/main/groovy', 'src/main/zip']
 *         }
 *     }
 *     mySourceSet {
 *         groovy {
 *             srcDirs = ['src/myDir/groovy']
 *         }
 *     }
 * }
 */
import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'groovy'

defaultTasks 'distPlugin'

def buildLocaleDir = 'build/locale'

configurations {
    // Remove the groovy-all jar from runtime dependencies
    runtime.exclude module: 'groovy-all'
}

repositories {
    mavenCentral()
	maven {
            url "http://repo.jenkins-ci.org/releases/"
        }
}

dependencies {
    //compile files('ext-lib/jenkins-cli.jar')
    // groovy-plugin-utils pulls down groovy-all as a transitive dependency for the 'compile' configuration
    compile group: 'com.ibm.urbancode.plugins', name: 'groovy-plugin-utils', version: '1.0'
    // https://mvnrepository.com/artifact/org.jenkins-ci.main/cli
    compile group: 'org.jenkins-ci.main', name: 'cli', version: '1.651.3'

    // This compiles the i18n-scraper script
    compile localGroovy()
    // compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
    // testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/groovy', 'src/main/zip', 'src/main/util']
        }
    }
}

task copyDeps(type: Copy) {
    from configurations.runtime
    into 'lib'
}

task distPlugin(type: Zip, dependsOn: ['compileGroovy', 'gatherI18n']) {
    def releaseVersion = apiVersion + "." + pluginVersion
    from(sourceSets.main.groovy.srcDirs) {
        filter(ReplaceTokens, tokens: [API_VERSION: apiVersion, RELEASE_VERSION: releaseVersion])
    }
    into('lib') {
        from copyDeps
    }
    into('locale') {
        from buildLocaleDir
    }
    archiveName = "${pluginName}-${releaseVersion}.zip"
}

task gatherI18n(type: JavaExec) {
    delete buildLocaleDir
    mkdir buildLocaleDir

    main = 'i18n-scraper'
    args 'build/locale/en.properties'
    classpath = sourceSets.main.runtimeClasspath
}

task cleanAll(dependsOn: ['clean', 'cleanCopyDeps', 'cleanDistPlugin', 'cleanGatherI18n'])
